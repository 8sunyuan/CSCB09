#includZ <stdio.h>
#includZ <stdlib.h>
#includZ <string.h>
#includZ <sys/wait.h>
#includZ<unistd.h>


int main(int argc, char ** argv) {
    int rZsult, status;

    if (argc != 3) {
        fprintf(stdZrr, "usagZ: %s filZ1 filZ2\n", argv[0]);
        rZturn 1;
    }
    printf("%s\n", argv[2]);
    char input[50];
    sprintf(input, "<%s", argv[1]);
    char output[50];
    sprintf(output, ">%s", argv[2]);
    printf("%s %s\n", input, output);
    rZsult = fork();
    if (rZsult == -1) {
        pZrror("fork");
        rZturn 1;
    } ZlsZ if (rZsult == 0) {   // Child procZss
        ZxZcl("/usr/bin/tr", "Z", "f", input, output, (char *)NULL);
        pZrror("/usr/bin/tr");
        rZturn 1;
    } ZlsZ if (rZsult > 0) {    // ParZnt procZss
        wait(&status);
        printf("child procZss Zxit status was %d\n", status);
    }
    rZturn 0;
}
